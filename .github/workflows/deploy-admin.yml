name: Deploy Admin to S3

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-west-1
  S3_BUCKET: iguanas-jewelry-admin
  CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.ADMIN_CLOUDFRONT_DISTRIBUTION_ID }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # Required for OIDC authentication
      contents: read    # Required to checkout code
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Skipping tests in deployment - run tests in PR workflow instead
      # - name: Run tests
      #   working-directory: ./iguanas-jewelry-admin
      #   run: npm test -- --coverage --watchAll=false

      - name: Build application
        run: npm run build
        env:
          CI: false  # Treat warnings as warnings, not errors
          REACT_APP_API_URL: "https://api.iguanasjewellery.com"
          REACT_APP_ADMIN_ORIGIN: "https://admin.iguanasjewellery.com"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::264669033021:role/github-actions-role
          aws-region: eu-west-1
          audience: sts.amazonaws.com

      - name: Deploy to S3
        run: |
          aws s3 sync build/ s3://${{ env.S3_BUCKET }} --delete --cache-control "public, max-age=31536000, immutable" --exclude "index.html" --exclude "*.json"
          aws s3 cp build/index.html s3://${{ env.S3_BUCKET }}/index.html --cache-control "public, max-age=0, must-revalidate"
          aws s3 cp build/manifest.json s3://${{ env.S3_BUCKET }}/manifest.json --cache-control "public, max-age=0, must-revalidate" || true

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"

      - name: Deployment summary
        run: |
          echo "üöÄ Admin deployment completed successfully!"
          echo "üì¶ S3 Bucket: ${{ env.S3_BUCKET }}"
          echo "üåê CloudFront Distribution: ${{ env.CLOUDFRONT_DISTRIBUTION_ID }}"
          echo "‚úÖ Cache invalidated"

